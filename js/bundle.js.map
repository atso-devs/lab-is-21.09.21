{"version":3,"sources":["webpack://food/./js/modules/labOne.js","webpack://food/./js/modules/labThree.js","webpack://food/./js/script.js"],"names":["tableOne","id","n","k","s","m","v","tableElement","document","querySelector","forEach","item","index","tr","createElement","innerHTML","countLetters","lengthPass","second","countIncorrectPass","pause","speed","Math","pow","rezult","countRezult","append","createStr","fillingTable","taskOne","tableTwo","t","time","num","base","log","toFixed","taskTwo","alphabet","inputKey","inputText","outputText","encrypt","pos","shiftLetter","key","length","console","newPos","contains","symb","arr","i","addEventListener","inputStr","value","labOne","labThree"],"mappings":"yBAgHA,MAhHA,YAKC,WAEC,MAAMA,EAAW,CAChB,CAAEC,GAAI,EAAGC,EAAG,GAAIC,EAAG,GAAIC,EAAG,IAAKC,EAAG,EAAGC,EAAG,GACxC,CAAEL,GAAI,EAAGC,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIC,EAAG,EAAGC,EAAG,GACvC,CAAEL,GAAI,EAAGC,EAAG,GAAIC,EAAG,EAAGC,EAAG,GAAIC,EAAG,EAAGC,EAAG,MA6BvC,WACC,MAAMC,EAAeC,SAASC,cAAc,cAkB5CT,EAASU,SAAQ,SAAUC,EAAMC,IAhBjC,SAAmBD,GAClB,IAAIE,EAAKL,SAASM,cAAc,MAEhCD,EAAGE,UAAa,6BACEJ,EAAKV,wBACjBU,EAAKT,uBACLS,EAAKR,uBACLQ,EAAKP,uBACLO,EAAKN,uBACLM,EAAKL,uBArCb,SACCU,EACAC,EACAC,EACAC,EACAC,GAEA,MACMC,EADeC,KAAKC,IAAIP,EAAcC,GACfC,EAC7B,IAAIM,EAYJ,OATCA,EAD0B,IAAvBL,GAAsC,IAAVC,EACrBC,EAAQD,EAASD,EAElBE,EAGVG,GAAkB,GAClBA,GAAkB,GAClBA,GAAkB,GAEXA,EAiBAC,CAAYd,EAAKT,EAAGS,EAAKR,EAAGQ,EAAKP,EAAGO,EAAKN,EAAGM,EAAKL,kBAGvDC,EAAaE,cAAc,SAASiB,OAAOb,GAI3Cc,CAAUhB,MAIZiB,GA6CDC,GA1CA,WAEC,MAAMC,EAAW,CAChB,CAAE7B,GAAI,EAAGC,EAAG,GAAI6B,EAAG,IAAK3B,EAAG,KAC3B,CAAEH,GAAI,EAAGC,EAAG,GAAI6B,EAAG,IAAK3B,EAAG,IAC3B,CAAEH,GAAI,EAAGC,EAAG,GAAI6B,EAAG,GAAI3B,EAAG,MAY3B,WACC,MAAMG,EAAeC,SAASC,cAAc,cAgB5CqB,EAASpB,SAAQ,SAAUC,EAAMC,IAdjC,SAAmBD,GAClB,IAAIE,EAAKL,SAASM,cAAc,MAZlC,IAAqBE,EAAcgB,EAAMd,EA1E3Be,EAAKC,EAwFjBrB,EAAGE,UAAa,6BACEJ,EAAKV,wBACjBU,EAAKT,uBACLS,EAAKoB,uBACLpB,EAAKP,uBAlBQY,EAmBDL,EAAKT,EAnBU8B,EAmBPrB,EAAKoB,EAnBQb,EAmBLP,EAAKP,GA7F3B6B,EA2EQD,EAAOd,EA3EVgB,EA4EiBlB,EA3E7BM,KAAKa,IAAIF,GAAOX,KAAKa,IAAID,IA6EjBE,QAAQ,kBAkBrB7B,EAAaE,cAAc,SAASiB,OAAOb,GAI3Cc,CAAUhB,MAIZiB,GAIDS,ICxDD,EArDA,WACC,MAAMC,EAAW,CAChB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAChK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAE3JC,EAAW/B,SAASC,cAAc,aACvC+B,EAAYhC,SAASC,cAAc,cACnCgC,EAAajC,SAASC,cAAc,eACpCiC,EAAUlC,SAASC,cAAc,YAClC,IAAIkC,EAAM,EAEV,SAASC,EAAYD,EAAKE,GACzB,GAAKF,EAAME,EAAOP,EAASQ,OAI1B,OAHAC,QAAQZ,IAAI,WACZY,QAAQZ,IAAIQ,GACZI,QAAQZ,IAAIU,GACLP,EAASK,EAAIE,GACd,CACN,IAAIG,EAAWL,EAAME,EAAOP,EAASQ,OAIrC,OAHAC,QAAQZ,IAAIQ,GACZI,QAAQZ,IAAIU,GACZE,QAAQZ,IAAIa,GACLV,EAASU,IAIlB,SAASC,EAASC,EAAMC,GACvB,IAAK,IAAIC,EAAI,EAAGA,EAAID,EAAIL,OAAQM,IAC/B,GAAIF,IAASC,EAAIC,GAEhB,OADAT,EAAMS,GACC,EAKVV,EAAQW,iBAAiB,SAAS,KACjC,IAAIC,EAAWd,EAAUe,MACxBV,GAAON,EAASgB,MAEb/B,EAAS,GAEb,IAAK,IAAI4B,EAAI,EAAGA,EAAIE,EAASR,OAAQM,IAC9BH,EAASK,EAASF,GAAId,GAG3Bd,GAAkBoB,EAAYD,EAAKE,GAFnCrB,GAAkB8B,EAASF,GAM7BX,EAAWc,MAAQ/B,KAIrB,GClDAhB,SAAS6C,iBAAiB,oBAAoB,KAC7CG,IACAC,O","file":"bundle.js","sourcesContent":["function labOne() {\r\n\tfunction myLog(num, base) {\r\n\t\treturn Math.log(num) / Math.log(base);\r\n\t}\r\n\r\n\tfunction taskOne() {\r\n\t\t//константа, хранящая в себе значения переменных из таблицы\r\n\t\tconst tableOne = [\r\n\t\t\t{ id: 1, n: 33, k: 10, s: 100, m: 0, v: 0 },\r\n\t\t\t{ id: 2, n: 26, k: 12, s: 13, m: 3, v: 2 },\r\n\t\t\t{ id: 3, n: 52, k: 6, s: 30, m: 5, v: 10 },\r\n\t\t];\r\n\r\n\t\t//подсчет результата\r\n\t\tfunction countRezult(\r\n\t\t\tcountLetters,\r\n\t\t\tlengthPass,\r\n\t\t\tsecond,\r\n\t\t\tcountIncorrectPass,\r\n\t\t\tpause\r\n\t\t) {\r\n\t\t\tconst countVariant = Math.pow(countLetters, lengthPass);\r\n\t\t\tconst speed = countVariant / second;\r\n\t\t\tlet rezult;\r\n\r\n\t\t\tif (countIncorrectPass !== 0 && pause !== 0) {\r\n\t\t\t\trezult = (speed * pause) / countIncorrectPass;\r\n\t\t\t} else {\r\n\t\t\t\trezult = speed;\r\n\t\t\t}\r\n\r\n\t\t\trezult = rezult / 60; //в минуты\r\n\t\t\trezult = rezult / 60; //в часы\r\n\t\t\trezult = rezult / 24; //в дни\r\n\r\n\t\t\treturn rezult;\r\n\t\t}\r\n\r\n\t\t//заполнение таблицы\r\n\t\tfunction fillingTable() {\r\n\t\t\tconst tableElement = document.querySelector('#table-1-1');\r\n\r\n\t\t\tfunction createStr(item) {\r\n\t\t\t\tlet tr = document.createElement('tr');\r\n\r\n\t\t\t\ttr.innerHTML = `\r\n\t\t\t\t<th scope=\"row\">${item.id}</th>\r\n\t\t\t\t<td>${item.n}</td>\r\n\t\t\t\t<td>${item.k}</td>\r\n\t\t\t\t<td>${item.s}</td>\r\n\t\t\t\t<td>${item.m}</td>\r\n\t\t\t\t<td>${item.v}</td>\r\n\t\t\t\t<td>${countRezult(item.n, item.k, item.s, item.m, item.v)}</td>\r\n\t\t\t`;\r\n\r\n\t\t\t\ttableElement.querySelector('tbody').append(tr);\r\n\t\t\t}\r\n\r\n\t\t\ttableOne.forEach(function (item, index) {\r\n\t\t\t\tcreateStr(item);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tfillingTable();\r\n\t}\r\n\r\n\tfunction taskTwo() {\r\n\t\t//константа, хранящая в себе значения переменных из таблицы\r\n\t\tconst tableTwo = [\r\n\t\t\t{ id: 1, n: 33, t: 100, s: 100 },\r\n\t\t\t{ id: 2, n: 26, t: 120, s: 13 },\r\n\t\t\t{ id: 3, n: 52, t: 60, s: 30 },\r\n\t\t];\r\n\r\n\t\t//подсчет результатов\r\n\t\tfunction countRezult(countLetters, time, second) {\r\n\t\t\tconst countVariant = time * second;\r\n\t\t\tconst rezult = myLog(countVariant, countLetters);\r\n\r\n\t\t\treturn rezult.toFixed(4);\r\n\t\t}\r\n\r\n\t\t//заполнение таблицы\r\n\t\tfunction fillingTable() {\r\n\t\t\tconst tableElement = document.querySelector('#table-1-2');\r\n\r\n\t\t\tfunction createStr(item) {\r\n\t\t\t\tlet tr = document.createElement('tr');\r\n\r\n\t\t\t\ttr.innerHTML = `\r\n\t\t\t\t<th scope=\"row\">${item.id}</th>\r\n\t\t\t\t<td>${item.n}</td>\r\n\t\t\t\t<td>${item.t}</td>\r\n\t\t\t\t<td>${item.s}</td>\r\n\t\t\t\t<td>${countRezult(item.n, item.t, item.s)}</td>\r\n\t\t\t`;\r\n\r\n\t\t\t\ttableElement.querySelector('tbody').append(tr);\r\n\t\t\t}\r\n\r\n\t\t\ttableTwo.forEach(function (item, index) {\r\n\t\t\t\tcreateStr(item);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tfillingTable();\r\n\t}\r\n\r\n\ttaskOne();\r\n\ttaskTwo();\r\n}\r\n\r\nexport default labOne;\r\n","function labThree() {\r\n\tconst alphabet = [\r\n\t\t'а', 'б', 'в', 'г', 'д', 'е', 'ё', 'ж', 'з', 'и', 'й', 'к', 'л', 'м', 'н', 'о', 'п', 'р', 'с', 'т', 'у', 'ф', 'х', 'ц', 'ч', 'ш', 'щ', 'ъ', 'ы', 'ь', 'э', 'ю', 'я',\r\n\t\t'А', 'Б', 'В', 'Г', 'Д', 'Е', 'Ё', 'Ж', 'З', 'И', 'Й', 'К', 'Л', 'М', 'Н', 'О', 'П', 'Р', 'С', 'Т', 'У', 'Ф', 'Х', 'Ц', 'Ч', 'Ш', 'Щ', 'Ъ', 'Ы', 'Ь', 'Э', 'Ю', 'Я'\r\n\t];\r\n\tconst inputKey = document.querySelector('#inputKey'),\r\n\t\tinputText = document.querySelector('#inputText'),\r\n\t\toutputText = document.querySelector('#outputText'),\r\n\t\tencrypt = document.querySelector('#encrypt');\r\n\tlet pos = 0;\r\n\r\n\tfunction shiftLetter(pos, key) {\r\n\t\tif ((pos + key) < alphabet.length) {\r\n\t\t\tconsole.log('Не туда');\r\n\t\t\tconsole.log(pos);\r\n\t\t\tconsole.log(key);\r\n\t\t\treturn alphabet[pos+key];\r\n\t\t} else {\r\n\t\t\tlet newPos = ((pos + key) - alphabet.length);\r\n\t\t\tconsole.log(pos);\r\n\t\t\tconsole.log(key);\r\n\t\t\tconsole.log(newPos);\r\n\t\t\treturn alphabet[newPos];\r\n\t\t}\r\n\t}\r\n\r\n\tfunction contains(symb, arr) {\r\n\t\tfor (let i = 0; i < arr.length; i++) {\r\n\t\t\tif (symb === arr[i]) {\r\n\t\t\t\tpos = i;\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\t}\t\r\n\r\n\tencrypt.addEventListener('click', () => {\r\n\t\tlet inputStr = inputText.value,\r\n\t\t\tkey = +inputKey.value;\r\n\r\n\t\tlet rezult = '';\r\n\r\n\t\tfor (let i = 0; i < inputStr.length; i++) {\r\n\t\t\tif (!(contains(inputStr[i], alphabet))) {\r\n\t\t\t\trezult = rezult + inputStr[i];\r\n\t\t\t} else {\r\n\t\t\t\trezult = rezult + shiftLetter(pos, key);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\toutputText.value = rezult;\r\n\t});\r\n}\r\n\r\nexport default labThree();\r\n","import labOne from './modules/labOne';\r\nimport labThree from './modules/labThree';\r\n\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n\tlabOne();\r\n\tlabThree();\r\n});\r\n"],"sourceRoot":""}